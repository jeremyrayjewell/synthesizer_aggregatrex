{"ast":null,"code":"export default class Voice {\n  constructor(audioContext, outputNode, options) {\n    this.audioContext = audioContext;\n    this.outputNode = outputNode;\n    this.options = options;\n\n    // Create nodes\n    this.oscillator = audioContext.createOscillator();\n    this.gainNode = audioContext.createGain();\n    this.filter = audioContext.createBiquadFilter();\n\n    // Configure oscillator\n    this.oscillator.type = options.waveform || 'sawtooth';\n\n    // Configure gain (envelope starts at 0)\n    this.gainNode.gain.setValueAtTime(0, audioContext.currentTime);\n\n    // Configure filter\n    this.filter.type = options.filterType || 'lowpass';\n    this.filter.frequency.value = options.filterCutoff || 2000;\n    this.filter.Q.value = options.filterQ || 1;\n\n    // Connect nodes: oscillator → filter → gain → output\n    this.oscillator.connect(this.filter);\n    this.filter.connect(this.gainNode);\n    this.gainNode.connect(this.outputNode);\n  }\n  start(noteNumber) {\n    const now = this.audioContext.currentTime;\n    const freq = 440 * Math.pow(2, (noteNumber - 69) / 12); // MIDI to frequency\n\n    this.oscillator.frequency.setValueAtTime(freq, now);\n    this.oscillator.start(now);\n\n    // Envelope: attack → decay → sustain\n    const {\n      attack,\n      decay,\n      sustain,\n      velocity\n    } = this.options;\n    const peak = velocity || 1.0;\n    const sustainLevel = sustain * peak;\n    this.gainNode.gain.cancelScheduledValues(now);\n    this.gainNode.gain.setValueAtTime(0, now);\n    this.gainNode.gain.linearRampToValueAtTime(peak, now + attack);\n    this.gainNode.gain.linearRampToValueAtTime(sustainLevel, now + attack + decay);\n  }\n  stop() {\n    const now = this.audioContext.currentTime;\n    const {\n      release\n    } = this.options;\n    this.gainNode.gain.cancelScheduledValues(now);\n    this.gainNode.gain.setValueAtTime(this.gainNode.gain.value, now);\n    this.gainNode.gain.linearRampToValueAtTime(0, now + release);\n    this.oscillator.stop(now + release + 0.05); // slight buffer\n    setTimeout(() => {\n      this.oscillator.disconnect();\n      this.gainNode.disconnect();\n      this.filter.disconnect();\n    }, (release + 0.1) * 1000);\n  }\n}","map":{"version":3,"names":["Voice","constructor","audioContext","outputNode","options","oscillator","createOscillator","gainNode","createGain","filter","createBiquadFilter","type","waveform","gain","setValueAtTime","currentTime","filterType","frequency","value","filterCutoff","Q","filterQ","connect","start","noteNumber","now","freq","Math","pow","attack","decay","sustain","velocity","peak","sustainLevel","cancelScheduledValues","linearRampToValueAtTime","stop","release","setTimeout","disconnect"],"sources":["D:/git/aggregatrex-1/src/audio/Voice.js"],"sourcesContent":["export default class Voice {\r\n  constructor(audioContext, outputNode, options) {\r\n    this.audioContext = audioContext;\r\n    this.outputNode = outputNode;\r\n    this.options = options;\r\n\r\n    // Create nodes\r\n    this.oscillator = audioContext.createOscillator();\r\n    this.gainNode = audioContext.createGain();\r\n    this.filter = audioContext.createBiquadFilter();\r\n\r\n    // Configure oscillator\r\n    this.oscillator.type = options.waveform || 'sawtooth';\r\n\r\n    // Configure gain (envelope starts at 0)\r\n    this.gainNode.gain.setValueAtTime(0, audioContext.currentTime);\r\n\r\n    // Configure filter\r\n    this.filter.type = options.filterType || 'lowpass';\r\n    this.filter.frequency.value = options.filterCutoff || 2000;\r\n    this.filter.Q.value = options.filterQ || 1;\r\n\r\n    // Connect nodes: oscillator → filter → gain → output\r\n    this.oscillator.connect(this.filter);\r\n    this.filter.connect(this.gainNode);\r\n    this.gainNode.connect(this.outputNode);\r\n  }\r\n\r\n  start(noteNumber) {\r\n    const now = this.audioContext.currentTime;\r\n    const freq = 440 * Math.pow(2, (noteNumber - 69) / 12); // MIDI to frequency\r\n\r\n    this.oscillator.frequency.setValueAtTime(freq, now);\r\n    this.oscillator.start(now);\r\n\r\n    // Envelope: attack → decay → sustain\r\n    const { attack, decay, sustain, velocity } = this.options;\r\n    const peak = velocity || 1.0;\r\n    const sustainLevel = sustain * peak;\r\n\r\n    this.gainNode.gain.cancelScheduledValues(now);\r\n    this.gainNode.gain.setValueAtTime(0, now);\r\n    this.gainNode.gain.linearRampToValueAtTime(peak, now + attack);\r\n    this.gainNode.gain.linearRampToValueAtTime(sustainLevel, now + attack + decay);\r\n  }\r\n\r\n  stop() {\r\n    const now = this.audioContext.currentTime;\r\n    const { release } = this.options;\r\n\r\n    this.gainNode.gain.cancelScheduledValues(now);\r\n    this.gainNode.gain.setValueAtTime(this.gainNode.gain.value, now);\r\n    this.gainNode.gain.linearRampToValueAtTime(0, now + release);\r\n\r\n    this.oscillator.stop(now + release + 0.05); // slight buffer\r\n    setTimeout(() => {\r\n      this.oscillator.disconnect();\r\n      this.gainNode.disconnect();\r\n      this.filter.disconnect();\r\n    }, (release + 0.1) * 1000);\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}