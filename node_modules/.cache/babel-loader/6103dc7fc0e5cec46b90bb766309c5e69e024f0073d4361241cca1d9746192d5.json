{"ast":null,"code":"var _jsxFileName = \"D:\\\\git\\\\aggregatrex-1\\\\src\\\\components\\\\Knob.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport { Text } from '@react-three/drei';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Knob = ({\n  value = 0,\n  min = 0,\n  max = 1,\n  onChange = () => {},\n  size = 1,\n  label = 'Knob'\n}) => {\n  _s();\n  const knobRef = useRef();\n  const [isDragging, setDragging] = useState(false);\n  const [startY, setStartY] = useState(0);\n  const [initialValue, setInitialValue] = useState(value);\n  const normalized = (value - min) / (max - min);\n  const angle = normalized * Math.PI * 1.5 - Math.PI * 0.75;\n  useFrame(() => {\n    if (knobRef.current) {\n      knobRef.current.rotation.y = angle;\n    }\n  });\n  const handlePointerDown = e => {\n    e.stopPropagation();\n    setDragging(true);\n    setStartY(e.clientY);\n    setInitialValue(value);\n  };\n  const handlePointerMove = e => {\n    if (!isDragging) return;\n    e.stopPropagation();\n    const delta = (startY - e.clientY) * 0.01;\n    const next = clamp(initialValue + delta * (max - min), min, max);\n    onChange(next);\n  };\n  const handlePointerUp = () => {\n    setDragging(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 0],\n    onPointerDown: handlePointerDown,\n    onPointerMove: handlePointerMove,\n    onPointerUp: handlePointerUp,\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      ref: knobRef,\n      children: [/*#__PURE__*/_jsxDEV(\"cylinderGeometry\", {\n        args: [size * 0.4, size * 0.4, size * 0.2, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        color: isDragging ? '#aaaaff' : '#dddddd'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      position: [0, -0.5, 0.6],\n      fontSize: 0.15,\n      color: \"white\",\n      anchorX: \"center\",\n      anchorY: \"middle\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Knob, \"0dyGuled2zukAJphCsVDRrVKiNw=\", false, function () {\n  return [useFrame];\n});\n_c = Knob;\nfunction clamp(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nexport default Knob;\nvar _c;\n$RefreshReg$(_c, \"Knob\");","map":{"version":3,"names":["React","useRef","useState","useFrame","Text","jsxDEV","_jsxDEV","Knob","value","min","max","onChange","size","label","_s","knobRef","isDragging","setDragging","startY","setStartY","initialValue","setInitialValue","normalized","angle","Math","PI","current","rotation","y","handlePointerDown","e","stopPropagation","clientY","handlePointerMove","delta","next","clamp","handlePointerUp","position","onPointerDown","onPointerMove","onPointerUp","children","ref","args","fileName","_jsxFileName","lineNumber","columnNumber","color","fontSize","anchorX","anchorY","_c","$RefreshReg$"],"sources":["D:/git/aggregatrex-1/src/components/Knob.jsx"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport { useFrame } from '@react-three/fiber';\r\nimport { Text } from '@react-three/drei';\r\n\r\nconst Knob = ({\r\n  value = 0,\r\n  min = 0,\r\n  max = 1,\r\n  onChange = () => {},\r\n  size = 1,\r\n  label = 'Knob'\r\n}) => {\r\n  const knobRef = useRef();\r\n  const [isDragging, setDragging] = useState(false);\r\n  const [startY, setStartY] = useState(0);\r\n  const [initialValue, setInitialValue] = useState(value);\r\n\r\n  const normalized = (value - min) / (max - min);\r\n  const angle = normalized * Math.PI * 1.5 - Math.PI * 0.75;\r\n\r\n  useFrame(() => {\r\n    if (knobRef.current) {\r\n      knobRef.current.rotation.y = angle;\r\n    }\r\n  });\r\n\r\n  const handlePointerDown = (e) => {\r\n    e.stopPropagation();\r\n    setDragging(true);\r\n    setStartY(e.clientY);\r\n    setInitialValue(value);\r\n  };\r\n\r\n  const handlePointerMove = (e) => {\r\n    if (!isDragging) return;\r\n    e.stopPropagation();\r\n    const delta = (startY - e.clientY) * 0.01;\r\n    const next = clamp(initialValue + delta * (max - min), min, max);\r\n    onChange(next);\r\n  };\r\n\r\n  const handlePointerUp = () => {\r\n    setDragging(false);\r\n  };\r\n\r\n  return (\r\n    <group\r\n      position={[0, 0, 0]}\r\n      onPointerDown={handlePointerDown}\r\n      onPointerMove={handlePointerMove}\r\n      onPointerUp={handlePointerUp}\r\n    >\r\n      <mesh ref={knobRef}>\r\n        <cylinderGeometry args={[size * 0.4, size * 0.4, size * 0.2, 32]} />\r\n        <meshStandardMaterial color={isDragging ? '#aaaaff' : '#dddddd'} />\r\n      </mesh>\r\n      <Text\r\n        position={[0, -0.5, 0.6]}\r\n        fontSize={0.15}\r\n        color=\"white\"\r\n        anchorX=\"center\"\r\n        anchorY=\"middle\"\r\n      >\r\n        {label}\r\n      </Text>\r\n    </group>\r\n  );\r\n};\r\n\r\nfunction clamp(value, min, max) {\r\n  return Math.max(min, Math.min(max, value));\r\n}\r\n\r\nexport default Knob;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,IAAI,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,IAAI,GAAGA,CAAC;EACZC,KAAK,GAAG,CAAC;EACTC,GAAG,GAAG,CAAC;EACPC,GAAG,GAAG,CAAC;EACPC,QAAQ,GAAGA,CAAA,KAAM,CAAC,CAAC;EACnBC,IAAI,GAAG,CAAC;EACRC,KAAK,GAAG;AACV,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAMC,OAAO,GAAGd,MAAM,CAAC,CAAC;EACxB,MAAM,CAACe,UAAU,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACgB,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAACM,KAAK,CAAC;EAEvD,MAAMc,UAAU,GAAG,CAACd,KAAK,GAAGC,GAAG,KAAKC,GAAG,GAAGD,GAAG,CAAC;EAC9C,MAAMc,KAAK,GAAGD,UAAU,GAAGE,IAAI,CAACC,EAAE,GAAG,GAAG,GAAGD,IAAI,CAACC,EAAE,GAAG,IAAI;EAEzDtB,QAAQ,CAAC,MAAM;IACb,IAAIY,OAAO,CAACW,OAAO,EAAE;MACnBX,OAAO,CAACW,OAAO,CAACC,QAAQ,CAACC,CAAC,GAAGL,KAAK;IACpC;EACF,CAAC,CAAC;EAEF,MAAMM,iBAAiB,GAAIC,CAAC,IAAK;IAC/BA,CAAC,CAACC,eAAe,CAAC,CAAC;IACnBd,WAAW,CAAC,IAAI,CAAC;IACjBE,SAAS,CAACW,CAAC,CAACE,OAAO,CAAC;IACpBX,eAAe,CAACb,KAAK,CAAC;EACxB,CAAC;EAED,MAAMyB,iBAAiB,GAAIH,CAAC,IAAK;IAC/B,IAAI,CAACd,UAAU,EAAE;IACjBc,CAAC,CAACC,eAAe,CAAC,CAAC;IACnB,MAAMG,KAAK,GAAG,CAAChB,MAAM,GAAGY,CAAC,CAACE,OAAO,IAAI,IAAI;IACzC,MAAMG,IAAI,GAAGC,KAAK,CAAChB,YAAY,GAAGc,KAAK,IAAIxB,GAAG,GAAGD,GAAG,CAAC,EAAEA,GAAG,EAAEC,GAAG,CAAC;IAChEC,QAAQ,CAACwB,IAAI,CAAC;EAChB,CAAC;EAED,MAAME,eAAe,GAAGA,CAAA,KAAM;IAC5BpB,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC;EAED,oBACEX,OAAA;IACEgC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;IACpBC,aAAa,EAAEV,iBAAkB;IACjCW,aAAa,EAAEP,iBAAkB;IACjCQ,WAAW,EAAEJ,eAAgB;IAAAK,QAAA,gBAE7BpC,OAAA;MAAMqC,GAAG,EAAE5B,OAAQ;MAAA2B,QAAA,gBACjBpC,OAAA;QAAkBsC,IAAI,EAAE,CAAChC,IAAI,GAAG,GAAG,EAAEA,IAAI,GAAG,GAAG,EAAEA,IAAI,GAAG,GAAG,EAAE,EAAE;MAAE;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpE1C,OAAA;QAAsB2C,KAAK,EAAEjC,UAAU,GAAG,SAAS,GAAG;MAAU;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC,eACP1C,OAAA,CAACF,IAAI;MACHkC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAE;MACzBY,QAAQ,EAAE,IAAK;MACfD,KAAK,EAAC,OAAO;MACbE,OAAO,EAAC,QAAQ;MAChBC,OAAO,EAAC,QAAQ;MAAAV,QAAA,EAEf7B;IAAK;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEZ,CAAC;AAAClC,EAAA,CA/DIP,IAAI;EAAA,QAgBRJ,QAAQ;AAAA;AAAAkD,EAAA,GAhBJ9C,IAAI;AAiEV,SAAS6B,KAAKA,CAAC5B,KAAK,EAAEC,GAAG,EAAEC,GAAG,EAAE;EAC9B,OAAOc,IAAI,CAACd,GAAG,CAACD,GAAG,EAAEe,IAAI,CAACf,GAAG,CAACC,GAAG,EAAEF,KAAK,CAAC,CAAC;AAC5C;AAEA,eAAeD,IAAI;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}