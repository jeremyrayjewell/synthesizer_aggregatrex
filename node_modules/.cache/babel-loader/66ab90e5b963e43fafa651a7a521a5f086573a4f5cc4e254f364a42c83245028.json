{"ast":null,"code":"var _jsxFileName = \"D:\\\\git\\\\aggregatrex-1\\\\src\\\\components\\\\Keyboard3D.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WHITE_KEYS = [0, 2, 4, 5, 7, 9, 11];\nconst BLACK_KEYS = [1, 3, 6, 8, 10];\nconst isBlack = note => BLACK_KEYS.includes(note % 12);\nconst Key = ({\n  note,\n  x,\n  isBlackKey,\n  isPressed,\n  onNoteOn,\n  onNoteOff\n}) => {\n  const width = isBlackKey ? 0.6 : 1;\n  const height = isBlackKey ? 0.5 : 0.2;\n  const depth = isBlackKey ? 3 : 4.5;\n  const color = isBlackKey ? 'black' : 'white';\n  const pressDepth = 0.05;\n  const pressTilt = isBlackKey ? 0.05 : 0.03;\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [x, 0, isBlackKey ? -0.75 : 0],\n    rotation: [isPressed ? pressTilt : 0, 0, 0],\n    onPointerDown: e => {\n      e.stopPropagation();\n      onNoteOn(note, 127);\n    },\n    onPointerUp: e => {\n      e.stopPropagation();\n      onNoteOff(note);\n    },\n    onPointerOut: e => {\n      e.stopPropagation();\n      onNoteOff(note);\n    },\n    children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, height / 2 - (isPressed ? pressDepth : 0), 0],\n      children: [/*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n        args: [width, height, depth]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        color: color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = Key;\nconst Keyboard3D = ({\n  startNote = 48,\n  endNote = 72,\n  onNoteOn,\n  onNoteOff,\n  activeNotes = new Set()\n}) => {\n  _s();\n  const notes = Array.from({\n    length: endNote - startNote + 1\n  }, (_, i) => startNote + i);\n  const whiteNotes = notes.filter(n => !isBlack(n));\n  const blackNotes = notes.filter(n => isBlack(n));\n  const keySpacing = 1.05;\n  const initialOffset = whiteNotes.length * keySpacing / 2;\n  const [keyboardOffset, setKeyboardOffset] = useState(0);\n  const dragging = useRef(false);\n  const lastX = useRef(null);\n\n  // Arrow keys\n  useEffect(() => {\n    const handleKey = e => {\n      if (e.key === 'ArrowLeft') {\n        setKeyboardOffset(offset => offset + 1);\n      } else if (e.key === 'ArrowRight') {\n        setKeyboardOffset(offset => offset - 1);\n      }\n    };\n    window.addEventListener('keydown', handleKey);\n    return () => window.removeEventListener('keydown', handleKey);\n  }, []);\n\n  // Dragging\n  useEffect(() => {\n    const handleDown = e => {\n      dragging.current = true;\n      lastX.current = e.clientX;\n    };\n    const handleMove = e => {\n      if (!dragging.current) return;\n      const deltaX = e.clientX - lastX.current;\n      setKeyboardOffset(offset => offset + deltaX * 0.01);\n      lastX.current = e.clientX;\n    };\n    const handleUp = () => {\n      dragging.current = false;\n    };\n    window.addEventListener('mousedown', handleDown);\n    window.addEventListener('mousemove', handleMove);\n    window.addEventListener('mouseup', handleUp);\n    return () => {\n      window.removeEventListener('mousedown', handleDown);\n      window.removeEventListener('mousemove', handleMove);\n      window.removeEventListener('mouseup', handleUp);\n    };\n  }, []);\n\n  // Mouse wheel\n  useEffect(() => {\n    const handleWheel = e => {\n      setKeyboardOffset(offset => offset - e.deltaY * 0.02);\n    };\n    window.addEventListener('wheel', handleWheel);\n    return () => window.removeEventListener('wheel', handleWheel);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [-initialOffset + keyboardOffset, 0, 0],\n    children: [whiteNotes.map((note, i) => /*#__PURE__*/_jsxDEV(Key, {\n      note: note,\n      x: i * keySpacing,\n      isBlackKey: false,\n      isPressed: activeNotes.has(note),\n      onNoteOn: onNoteOn,\n      onNoteOff: onNoteOff\n    }, note, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)), blackNotes.map(note => {\n      const index = whiteNotes.findIndex(n => n > note) - 1;\n      const x = index * keySpacing + 0.65;\n      return /*#__PURE__*/_jsxDEV(Key, {\n        note: note,\n        x: x,\n        isBlackKey: true,\n        isPressed: activeNotes.has(note),\n        onNoteOn: onNoteOn,\n        onNoteOff: onNoteOff\n      }, note, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(Keyboard3D, \"FkIeDl52sYZAR8qfUtMv46QIbVc=\");\n_c2 = Keyboard3D;\nexport default Keyboard3D;\nvar _c, _c2;\n$RefreshReg$(_c, \"Key\");\n$RefreshReg$(_c2, \"Keyboard3D\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","WHITE_KEYS","BLACK_KEYS","isBlack","note","includes","Key","x","isBlackKey","isPressed","onNoteOn","onNoteOff","width","height","depth","color","pressDepth","pressTilt","position","rotation","onPointerDown","e","stopPropagation","onPointerUp","onPointerOut","children","args","fileName","_jsxFileName","lineNumber","columnNumber","_c","Keyboard3D","startNote","endNote","activeNotes","Set","_s","notes","Array","from","length","_","i","whiteNotes","filter","n","blackNotes","keySpacing","initialOffset","keyboardOffset","setKeyboardOffset","dragging","lastX","handleKey","key","offset","window","addEventListener","removeEventListener","handleDown","current","clientX","handleMove","deltaX","handleUp","handleWheel","deltaY","map","has","index","findIndex","_c2","$RefreshReg$"],"sources":["D:/git/aggregatrex-1/src/components/Keyboard3D.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nconst WHITE_KEYS = [0, 2, 4, 5, 7, 9, 11];\r\nconst BLACK_KEYS = [1, 3, 6, 8, 10];\r\nconst isBlack = (note) => BLACK_KEYS.includes(note % 12);\r\n\r\nconst Key = ({ note, x, isBlackKey, isPressed, onNoteOn, onNoteOff }) => {\r\n  const width = isBlackKey ? 0.6 : 1;\r\n  const height = isBlackKey ? 0.5 : 0.2;\r\n  const depth = isBlackKey ? 3 : 4.5;\r\n  const color = isBlackKey ? 'black' : 'white';\r\n\r\n  const pressDepth = 0.05;\r\n  const pressTilt = isBlackKey ? 0.05 : 0.03;\r\n\r\n  return (\r\n    <group\r\n      position={[x, 0, isBlackKey ? -0.75 : 0]}\r\n      rotation={[isPressed ? pressTilt : 0, 0, 0]}\r\n      onPointerDown={(e) => {\r\n        e.stopPropagation();\r\n        onNoteOn(note, 127);\r\n      }}\r\n      onPointerUp={(e) => {\r\n        e.stopPropagation();\r\n        onNoteOff(note);\r\n      }}\r\n      onPointerOut={(e) => {\r\n        e.stopPropagation();\r\n        onNoteOff(note);\r\n      }}\r\n    >\r\n      <mesh position={[0, height / 2 - (isPressed ? pressDepth : 0), 0]}>\r\n        <boxGeometry args={[width, height, depth]} />\r\n        <meshStandardMaterial color={color} />\r\n      </mesh>\r\n    </group>\r\n  );\r\n};\r\n\r\nconst Keyboard3D = ({ startNote = 48, endNote = 72, onNoteOn, onNoteOff, activeNotes = new Set() }) => {\r\n  const notes = Array.from({ length: endNote - startNote + 1 }, (_, i) => startNote + i);\r\n  const whiteNotes = notes.filter(n => !isBlack(n));\r\n  const blackNotes = notes.filter(n => isBlack(n));\r\n  const keySpacing = 1.05;\r\n  const initialOffset = (whiteNotes.length * keySpacing) / 2;\r\n\r\n  const [keyboardOffset, setKeyboardOffset] = useState(0);\r\n  const dragging = useRef(false);\r\n  const lastX = useRef(null);\r\n\r\n  // Arrow keys\r\n  useEffect(() => {\r\n    const handleKey = (e) => {\r\n      if (e.key === 'ArrowLeft') {\r\n        setKeyboardOffset(offset => offset + 1);\r\n      } else if (e.key === 'ArrowRight') {\r\n        setKeyboardOffset(offset => offset - 1);\r\n      }\r\n    };\r\n    window.addEventListener('keydown', handleKey);\r\n    return () => window.removeEventListener('keydown', handleKey);\r\n  }, []);\r\n\r\n  // Dragging\r\n  useEffect(() => {\r\n    const handleDown = (e) => {\r\n      dragging.current = true;\r\n      lastX.current = e.clientX;\r\n    };\r\n    const handleMove = (e) => {\r\n      if (!dragging.current) return;\r\n      const deltaX = e.clientX - lastX.current;\r\n      setKeyboardOffset(offset => offset + deltaX * 0.01);\r\n      lastX.current = e.clientX;\r\n    };\r\n    const handleUp = () => {\r\n      dragging.current = false;\r\n    };\r\n\r\n    window.addEventListener('mousedown', handleDown);\r\n    window.addEventListener('mousemove', handleMove);\r\n    window.addEventListener('mouseup', handleUp);\r\n    return () => {\r\n      window.removeEventListener('mousedown', handleDown);\r\n      window.removeEventListener('mousemove', handleMove);\r\n      window.removeEventListener('mouseup', handleUp);\r\n    };\r\n  }, []);\r\n\r\n  // Mouse wheel\r\n  useEffect(() => {\r\n    const handleWheel = (e) => {\r\n      setKeyboardOffset(offset => offset - e.deltaY * 0.02);\r\n    };\r\n    window.addEventListener('wheel', handleWheel);\r\n    return () => window.removeEventListener('wheel', handleWheel);\r\n  }, []);\r\n\r\n  return (\r\n    <group position={[-initialOffset + keyboardOffset, 0, 0]}>\r\n      {whiteNotes.map((note, i) => (\r\n        <Key\r\n          key={note}\r\n          note={note}\r\n          x={i * keySpacing}\r\n          isBlackKey={false}\r\n          isPressed={activeNotes.has(note)}\r\n          onNoteOn={onNoteOn}\r\n          onNoteOff={onNoteOff}\r\n        />\r\n      ))}\r\n      {blackNotes.map((note) => {\r\n        const index = whiteNotes.findIndex(n => n > note) - 1;\r\n        const x = index * keySpacing + 0.65;\r\n        return (\r\n          <Key\r\n            key={note}\r\n            note={note}\r\n            x={x}\r\n            isBlackKey={true}\r\n            isPressed={activeNotes.has(note)}\r\n            onNoteOn={onNoteOn}\r\n            onNoteOff={onNoteOff}\r\n          />\r\n        );\r\n      })}\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default Keyboard3D;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;AACzC,MAAMC,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;AACnC,MAAMC,OAAO,GAAIC,IAAI,IAAKF,UAAU,CAACG,QAAQ,CAACD,IAAI,GAAG,EAAE,CAAC;AAExD,MAAME,GAAG,GAAGA,CAAC;EAAEF,IAAI;EAAEG,CAAC;EAAEC,UAAU;EAAEC,SAAS;EAAEC,QAAQ;EAAEC;AAAU,CAAC,KAAK;EACvE,MAAMC,KAAK,GAAGJ,UAAU,GAAG,GAAG,GAAG,CAAC;EAClC,MAAMK,MAAM,GAAGL,UAAU,GAAG,GAAG,GAAG,GAAG;EACrC,MAAMM,KAAK,GAAGN,UAAU,GAAG,CAAC,GAAG,GAAG;EAClC,MAAMO,KAAK,GAAGP,UAAU,GAAG,OAAO,GAAG,OAAO;EAE5C,MAAMQ,UAAU,GAAG,IAAI;EACvB,MAAMC,SAAS,GAAGT,UAAU,GAAG,IAAI,GAAG,IAAI;EAE1C,oBACER,OAAA;IACEkB,QAAQ,EAAE,CAACX,CAAC,EAAE,CAAC,EAAEC,UAAU,GAAG,CAAC,IAAI,GAAG,CAAC,CAAE;IACzCW,QAAQ,EAAE,CAACV,SAAS,GAAGQ,SAAS,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;IAC5CG,aAAa,EAAGC,CAAC,IAAK;MACpBA,CAAC,CAACC,eAAe,CAAC,CAAC;MACnBZ,QAAQ,CAACN,IAAI,EAAE,GAAG,CAAC;IACrB,CAAE;IACFmB,WAAW,EAAGF,CAAC,IAAK;MAClBA,CAAC,CAACC,eAAe,CAAC,CAAC;MACnBX,SAAS,CAACP,IAAI,CAAC;IACjB,CAAE;IACFoB,YAAY,EAAGH,CAAC,IAAK;MACnBA,CAAC,CAACC,eAAe,CAAC,CAAC;MACnBX,SAAS,CAACP,IAAI,CAAC;IACjB,CAAE;IAAAqB,QAAA,eAEFzB,OAAA;MAAMkB,QAAQ,EAAE,CAAC,CAAC,EAAEL,MAAM,GAAG,CAAC,IAAIJ,SAAS,GAAGO,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,CAAE;MAAAS,QAAA,gBAChEzB,OAAA;QAAa0B,IAAI,EAAE,CAACd,KAAK,EAAEC,MAAM,EAAEC,KAAK;MAAE;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7C9B,OAAA;QAAsBe,KAAK,EAAEA;MAAM;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEZ,CAAC;AAACC,EAAA,GAhCIzB,GAAG;AAkCT,MAAM0B,UAAU,GAAGA,CAAC;EAAEC,SAAS,GAAG,EAAE;EAAEC,OAAO,GAAG,EAAE;EAAExB,QAAQ;EAAEC,SAAS;EAAEwB,WAAW,GAAG,IAAIC,GAAG,CAAC;AAAE,CAAC,KAAK;EAAAC,EAAA;EACrG,MAAMC,KAAK,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAEP,OAAO,GAAGD,SAAS,GAAG;EAAE,CAAC,EAAE,CAACS,CAAC,EAAEC,CAAC,KAAKV,SAAS,GAAGU,CAAC,CAAC;EACtF,MAAMC,UAAU,GAAGN,KAAK,CAACO,MAAM,CAACC,CAAC,IAAI,CAAC3C,OAAO,CAAC2C,CAAC,CAAC,CAAC;EACjD,MAAMC,UAAU,GAAGT,KAAK,CAACO,MAAM,CAACC,CAAC,IAAI3C,OAAO,CAAC2C,CAAC,CAAC,CAAC;EAChD,MAAME,UAAU,GAAG,IAAI;EACvB,MAAMC,aAAa,GAAIL,UAAU,CAACH,MAAM,GAAGO,UAAU,GAAI,CAAC;EAE1D,MAAM,CAACE,cAAc,EAAEC,iBAAiB,CAAC,GAAGvD,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAMwD,QAAQ,GAAGtD,MAAM,CAAC,KAAK,CAAC;EAC9B,MAAMuD,KAAK,GAAGvD,MAAM,CAAC,IAAI,CAAC;;EAE1B;EACAD,SAAS,CAAC,MAAM;IACd,MAAMyD,SAAS,GAAIjC,CAAC,IAAK;MACvB,IAAIA,CAAC,CAACkC,GAAG,KAAK,WAAW,EAAE;QACzBJ,iBAAiB,CAACK,MAAM,IAAIA,MAAM,GAAG,CAAC,CAAC;MACzC,CAAC,MAAM,IAAInC,CAAC,CAACkC,GAAG,KAAK,YAAY,EAAE;QACjCJ,iBAAiB,CAACK,MAAM,IAAIA,MAAM,GAAG,CAAC,CAAC;MACzC;IACF,CAAC;IACDC,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEJ,SAAS,CAAC;IAC7C,OAAO,MAAMG,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEL,SAAS,CAAC;EAC/D,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAzD,SAAS,CAAC,MAAM;IACd,MAAM+D,UAAU,GAAIvC,CAAC,IAAK;MACxB+B,QAAQ,CAACS,OAAO,GAAG,IAAI;MACvBR,KAAK,CAACQ,OAAO,GAAGxC,CAAC,CAACyC,OAAO;IAC3B,CAAC;IACD,MAAMC,UAAU,GAAI1C,CAAC,IAAK;MACxB,IAAI,CAAC+B,QAAQ,CAACS,OAAO,EAAE;MACvB,MAAMG,MAAM,GAAG3C,CAAC,CAACyC,OAAO,GAAGT,KAAK,CAACQ,OAAO;MACxCV,iBAAiB,CAACK,MAAM,IAAIA,MAAM,GAAGQ,MAAM,GAAG,IAAI,CAAC;MACnDX,KAAK,CAACQ,OAAO,GAAGxC,CAAC,CAACyC,OAAO;IAC3B,CAAC;IACD,MAAMG,QAAQ,GAAGA,CAAA,KAAM;MACrBb,QAAQ,CAACS,OAAO,GAAG,KAAK;IAC1B,CAAC;IAEDJ,MAAM,CAACC,gBAAgB,CAAC,WAAW,EAAEE,UAAU,CAAC;IAChDH,MAAM,CAACC,gBAAgB,CAAC,WAAW,EAAEK,UAAU,CAAC;IAChDN,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEO,QAAQ,CAAC;IAC5C,OAAO,MAAM;MACXR,MAAM,CAACE,mBAAmB,CAAC,WAAW,EAAEC,UAAU,CAAC;MACnDH,MAAM,CAACE,mBAAmB,CAAC,WAAW,EAAEI,UAAU,CAAC;MACnDN,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEM,QAAQ,CAAC;IACjD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACApE,SAAS,CAAC,MAAM;IACd,MAAMqE,WAAW,GAAI7C,CAAC,IAAK;MACzB8B,iBAAiB,CAACK,MAAM,IAAIA,MAAM,GAAGnC,CAAC,CAAC8C,MAAM,GAAG,IAAI,CAAC;IACvD,CAAC;IACDV,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAEQ,WAAW,CAAC;IAC7C,OAAO,MAAMT,MAAM,CAACE,mBAAmB,CAAC,OAAO,EAAEO,WAAW,CAAC;EAC/D,CAAC,EAAE,EAAE,CAAC;EAEN,oBACElE,OAAA;IAAOkB,QAAQ,EAAE,CAAC,CAAC+B,aAAa,GAAGC,cAAc,EAAE,CAAC,EAAE,CAAC,CAAE;IAAAzB,QAAA,GACtDmB,UAAU,CAACwB,GAAG,CAAC,CAAChE,IAAI,EAAEuC,CAAC,kBACtB3C,OAAA,CAACM,GAAG;MAEFF,IAAI,EAAEA,IAAK;MACXG,CAAC,EAAEoC,CAAC,GAAGK,UAAW;MAClBxC,UAAU,EAAE,KAAM;MAClBC,SAAS,EAAE0B,WAAW,CAACkC,GAAG,CAACjE,IAAI,CAAE;MACjCM,QAAQ,EAAEA,QAAS;MACnBC,SAAS,EAAEA;IAAU,GANhBP,IAAI;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOV,CACF,CAAC,EACDiB,UAAU,CAACqB,GAAG,CAAEhE,IAAI,IAAK;MACxB,MAAMkE,KAAK,GAAG1B,UAAU,CAAC2B,SAAS,CAACzB,CAAC,IAAIA,CAAC,GAAG1C,IAAI,CAAC,GAAG,CAAC;MACrD,MAAMG,CAAC,GAAG+D,KAAK,GAAGtB,UAAU,GAAG,IAAI;MACnC,oBACEhD,OAAA,CAACM,GAAG;QAEFF,IAAI,EAAEA,IAAK;QACXG,CAAC,EAAEA,CAAE;QACLC,UAAU,EAAE,IAAK;QACjBC,SAAS,EAAE0B,WAAW,CAACkC,GAAG,CAACjE,IAAI,CAAE;QACjCM,QAAQ,EAAEA,QAAS;QACnBC,SAAS,EAAEA;MAAU,GANhBP,IAAI;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOV,CAAC;IAEN,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEZ,CAAC;AAACO,EAAA,CAzFIL,UAAU;AAAAwC,GAAA,GAAVxC,UAAU;AA2FhB,eAAeA,UAAU;AAAC,IAAAD,EAAA,EAAAyC,GAAA;AAAAC,YAAA,CAAA1C,EAAA;AAAA0C,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}