{"ast":null,"code":"var _jsxFileName = \"D:\\\\git\\\\aggregatrex-1\\\\src\\\\components\\\\Keyboard3D.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WHITE_KEYS = [0, 2, 4, 5, 7, 9, 11];\nconst BLACK_KEYS = [1, 3, 6, 8, 10];\nconst isBlack = note => BLACK_KEYS.includes(note % 12);\nconst Key = ({\n  note,\n  x,\n  isBlackKey,\n  onNoteOn,\n  onNoteOff\n}) => {\n  const width = isBlackKey ? 0.6 : 1;\n  const height = isBlackKey ? 0.5 : 0.2;\n  const depth = isBlackKey ? 3 : 4.5;\n  const color = isBlackKey ? 'black' : 'white';\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    position: [x, height / 2, isBlackKey ? -0.6 : 0],\n    onPointerDown: () => onNoteOn(note, 127),\n    onPointerUp: () => onNoteOff(note),\n    onPointerOut: () => onNoteOff(note),\n    children: [/*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n      args: [width, height, depth]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      color: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = Key;\nconst Keyboard3D = ({\n  startNote = 60,\n  endNote = 72,\n  onNoteOn,\n  onNoteOff\n}) => {\n  const notes = Array.from({\n    length: endNote - startNote + 1\n  }, (_, i) => startNote + i);\n  const whiteNotes = notes.filter(n => !isBlack(n));\n  const blackNotes = notes.filter(n => isBlack(n));\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [-whiteNotes.length / 2, 0, 0],\n    children: [whiteNotes.map((note, i) => /*#__PURE__*/_jsxDEV(Key, {\n      note: note,\n      x: i * 1.05,\n      isBlackKey: false,\n      onNoteOn: onNoteOn,\n      onNoteOff: onNoteOff\n    }, note, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }, this)), blackNotes.map(note => {\n      const index = whiteNotes.findIndex(n => n > note) - 1;\n      const x = index + 0.65;\n      return /*#__PURE__*/_jsxDEV(Key, {\n        note: note,\n        x: x,\n        isBlackKey: true,\n        onNoteOn: onNoteOn,\n        onNoteOff: onNoteOff\n      }, note, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Keyboard3D;\nexport default Keyboard3D;\nvar _c, _c2;\n$RefreshReg$(_c, \"Key\");\n$RefreshReg$(_c2, \"Keyboard3D\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","WHITE_KEYS","BLACK_KEYS","isBlack","note","includes","Key","x","isBlackKey","onNoteOn","onNoteOff","width","height","depth","color","position","onPointerDown","onPointerUp","onPointerOut","children","args","fileName","_jsxFileName","lineNumber","columnNumber","_c","Keyboard3D","startNote","endNote","notes","Array","from","length","_","i","whiteNotes","filter","n","blackNotes","map","index","findIndex","_c2","$RefreshReg$"],"sources":["D:/git/aggregatrex-1/src/components/Keyboard3D.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst WHITE_KEYS = [0, 2, 4, 5, 7, 9, 11];\r\nconst BLACK_KEYS = [1, 3, 6, 8, 10];\r\n\r\nconst isBlack = (note) => BLACK_KEYS.includes(note % 12);\r\n\r\nconst Key = ({ note, x, isBlackKey, onNoteOn, onNoteOff }) => {\r\n  const width = isBlackKey ? 0.6 : 1;\r\n  const height = isBlackKey ? 0.5 : 0.2;\r\n  const depth = isBlackKey ? 3 : 4.5;\r\n  const color = isBlackKey ? 'black' : 'white';\r\n\r\n  return (\r\n    <mesh\r\n      position={[x, height / 2, isBlackKey ? -0.6 : 0]}\r\n      onPointerDown={() => onNoteOn(note, 127)}\r\n      onPointerUp={() => onNoteOff(note)}\r\n      onPointerOut={() => onNoteOff(note)}\r\n    >\r\n      <boxGeometry args={[width, height, depth]} />\r\n      <meshStandardMaterial color={color} />\r\n    </mesh>\r\n  );\r\n};\r\n\r\nconst Keyboard3D = ({ startNote = 60, endNote = 72, onNoteOn, onNoteOff }) => {\r\n  const notes = Array.from({ length: endNote - startNote + 1 }, (_, i) => startNote + i);\r\n  const whiteNotes = notes.filter(n => !isBlack(n));\r\n  const blackNotes = notes.filter(n => isBlack(n));\r\n\r\n  return (\r\n    <group position={[-whiteNotes.length / 2, 0, 0]}>\r\n      {whiteNotes.map((note, i) => (\r\n  <Key\r\n    key={note}\r\n    note={note}\r\n    x={i * 1.05}\r\n          isBlackKey={false}\r\n          onNoteOn={onNoteOn}\r\n          onNoteOff={onNoteOff}\r\n        />\r\n      ))}\r\n      {blackNotes.map((note) => {\r\n        const index = whiteNotes.findIndex(n => n > note) - 1;\r\n        const x = index + 0.65;\r\n        return (\r\n          <Key\r\n            key={note}\r\n            note={note}\r\n            x={x}\r\n            isBlackKey={true}\r\n            onNoteOn={onNoteOn}\r\n            onNoteOff={onNoteOff}\r\n          />\r\n        );\r\n      })}\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default Keyboard3D;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}