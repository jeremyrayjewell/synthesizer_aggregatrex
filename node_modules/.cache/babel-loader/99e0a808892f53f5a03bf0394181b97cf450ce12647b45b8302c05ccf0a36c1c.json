{"ast":null,"code":"var _jsxFileName = \"D:\\\\git\\\\aggregatrex-1\\\\src\\\\components\\\\Keyboard3D.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WHITE_KEYS = [0, 2, 4, 5, 7, 9, 11];\nconst BLACK_KEYS = [1, 3, 6, 8, 10];\nconst isBlack = note => BLACK_KEYS.includes(note % 12);\nconst clamp = (value, min, max) => Math.min(Math.max(value, min), max);\nconst Key = ({\n  note,\n  x,\n  isBlackKey,\n  isPressed,\n  onNoteOn,\n  onNoteOff\n}) => {\n  const width = isBlackKey ? 0.6 : 1;\n  const height = isBlackKey ? 0.5 : 0.2;\n  const depth = isBlackKey ? 3 : 4.5;\n  const color = isBlackKey ? 'black' : 'white';\n  const pressDepth = 0.05;\n  const pressTilt = isBlackKey ? 0.05 : 0.03;\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [x, 0, isBlackKey ? -0.75 : 0],\n    rotation: [isPressed ? pressTilt : 0, 0, 0],\n    onPointerDown: e => {\n      e.stopPropagation();\n      onNoteOn(note, 127);\n    },\n    onPointerUp: e => {\n      e.stopPropagation();\n      onNoteOff(note);\n    },\n    onPointerOut: e => {\n      e.stopPropagation();\n      onNoteOff(note);\n    },\n    children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, height / 2 - (isPressed ? pressDepth : 0), 0],\n      children: [/*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n        args: [width, height, depth]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        color: color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = Key;\nconst Keyboard3D = ({\n  startNote = 21,\n  endNote = 108,\n  onNoteOn,\n  onNoteOff,\n  activeNotes = new Set()\n}) => {\n  _s();\n  const [scrollOffset, setScrollOffset] = useState(0);\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\n  useEffect(() => {\n    const updateSize = () => setIsMobile(window.innerWidth < 768);\n    window.addEventListener('resize', updateSize);\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n  const notes = Array.from({\n    length: endNote - startNote + 1\n  }, (_, i) => startNote + i);\n  const whiteNotes = notes.filter(n => !isBlack(n));\n  const blackNotes = notes.filter(n => isBlack(n));\n  const spacing = 1.05;\n  const totalWidth = whiteNotes.length * spacing;\n  const viewWidth = 20;\n  const maxOffset = 0;\n  const minOffset = -totalWidth + viewWidth;\n  const dragging = useRef(false);\n  const lastPos = useRef(null);\n  useEffect(() => {\n    const handleKey = e => {\n      if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {\n        setScrollOffset(offset => clamp(offset + 1, minOffset, maxOffset));\n      } else if (e.key === 'ArrowRight' || e.key === 'ArrowDown') {\n        setScrollOffset(offset => clamp(offset - 1, minOffset, maxOffset));\n      }\n    };\n    window.addEventListener('keydown', handleKey);\n    return () => window.removeEventListener('keydown', handleKey);\n  }, [minOffset, maxOffset]);\n  useEffect(() => {\n    const handleDown = e => {\n      dragging.current = true;\n      lastPos.current = isMobile ? e.clientY : e.clientX;\n    };\n    const handleMove = e => {\n      if (!dragging.current) return;\n      const current = isMobile ? e.clientY : e.clientX;\n      const delta = current - lastPos.current;\n      setScrollOffset(offset => clamp(offset + delta * 0.01, minOffset, maxOffset));\n      lastPos.current = current;\n    };\n    const handleUp = () => dragging.current = false;\n    window.addEventListener('mousedown', handleDown);\n    window.addEventListener('mousemove', handleMove);\n    window.addEventListener('mouseup', handleUp);\n    return () => {\n      window.removeEventListener('mousedown', handleDown);\n      window.removeEventListener('mousemove', handleMove);\n      window.removeEventListener('mouseup', handleUp);\n    };\n  }, [isMobile, minOffset, maxOffset]);\n  useEffect(() => {\n    const handleWheel = e => {\n      setScrollOffset(offset => clamp(offset - e.deltaY * 0.02, minOffset, maxOffset));\n    };\n    window.addEventListener('wheel', handleWheel);\n    return () => window.removeEventListener('wheel', handleWheel);\n  }, [minOffset, maxOffset]);\n  const keyboardPosition = isMobile ? [0, -8, -10] // Z adjusted for rotated camera on mobile\n  : [-totalWidth / 2 + scrollOffset, -8, 0];\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    position: keyboardPosition,\n    children: [whiteNotes.map((note, i) => /*#__PURE__*/_jsxDEV(Key, {\n      note: note,\n      x: i * spacing,\n      isBlackKey: false,\n      isPressed: activeNotes.has(note),\n      onNoteOn: onNoteOn,\n      onNoteOff: onNoteOff\n    }, note, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this)), blackNotes.map(note => {\n      const index = whiteNotes.findIndex(n => n > note) - 1;\n      const x = index * spacing + 0.65;\n      return /*#__PURE__*/_jsxDEV(Key, {\n        note: note,\n        x: x,\n        isBlackKey: true,\n        isPressed: activeNotes.has(note),\n        onNoteOn: onNoteOn,\n        onNoteOff: onNoteOff\n      }, note, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n_s(Keyboard3D, \"8blCl5VB/9j/Ots8f0xa/vM+t0A=\");\n_c2 = Keyboard3D;\nexport default Keyboard3D;\nvar _c, _c2;\n$RefreshReg$(_c, \"Key\");\n$RefreshReg$(_c2, \"Keyboard3D\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","WHITE_KEYS","BLACK_KEYS","isBlack","note","includes","clamp","value","min","max","Math","Key","x","isBlackKey","isPressed","onNoteOn","onNoteOff","width","height","depth","color","pressDepth","pressTilt","position","rotation","onPointerDown","e","stopPropagation","onPointerUp","onPointerOut","children","args","fileName","_jsxFileName","lineNumber","columnNumber","_c","Keyboard3D","startNote","endNote","activeNotes","Set","_s","scrollOffset","setScrollOffset","isMobile","setIsMobile","window","innerWidth","updateSize","addEventListener","removeEventListener","notes","Array","from","length","_","i","whiteNotes","filter","n","blackNotes","spacing","totalWidth","viewWidth","maxOffset","minOffset","dragging","lastPos","handleKey","key","offset","handleDown","current","clientY","clientX","handleMove","delta","handleUp","handleWheel","deltaY","keyboardPosition","map","has","index","findIndex","_c2","$RefreshReg$"],"sources":["D:/git/aggregatrex-1/src/components/Keyboard3D.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nconst WHITE_KEYS = [0, 2, 4, 5, 7, 9, 11];\r\nconst BLACK_KEYS = [1, 3, 6, 8, 10];\r\nconst isBlack = (note) => BLACK_KEYS.includes(note % 12);\r\nconst clamp = (value, min, max) => Math.min(Math.max(value, min), max);\r\n\r\nconst Key = ({ note, x, isBlackKey, isPressed, onNoteOn, onNoteOff }) => {\r\n  const width = isBlackKey ? 0.6 : 1;\r\n  const height = isBlackKey ? 0.5 : 0.2;\r\n  const depth = isBlackKey ? 3 : 4.5;\r\n  const color = isBlackKey ? 'black' : 'white';\r\n  const pressDepth = 0.05;\r\n  const pressTilt = isBlackKey ? 0.05 : 0.03;\r\n\r\n  return (\r\n    <group\r\n      position={[x, 0, isBlackKey ? -0.75 : 0]}\r\n      rotation={[isPressed ? pressTilt : 0, 0, 0]}\r\n      onPointerDown={(e) => {\r\n        e.stopPropagation();\r\n        onNoteOn(note, 127);\r\n      }}\r\n      onPointerUp={(e) => {\r\n        e.stopPropagation();\r\n        onNoteOff(note);\r\n      }}\r\n      onPointerOut={(e) => {\r\n        e.stopPropagation();\r\n        onNoteOff(note);\r\n      }}\r\n    >\r\n      <mesh position={[0, height / 2 - (isPressed ? pressDepth : 0), 0]}>\r\n        <boxGeometry args={[width, height, depth]} />\r\n        <meshStandardMaterial color={color} />\r\n      </mesh>\r\n    </group>\r\n  );\r\n};\r\n\r\nconst Keyboard3D = ({\r\n  startNote = 21,\r\n  endNote = 108,\r\n  onNoteOn,\r\n  onNoteOff,\r\n  activeNotes = new Set(),\r\n}) => {\r\n  const [scrollOffset, setScrollOffset] = useState(0);\r\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\r\n\r\n  useEffect(() => {\r\n    const updateSize = () => setIsMobile(window.innerWidth < 768);\r\n    window.addEventListener('resize', updateSize);\r\n    return () => window.removeEventListener('resize', updateSize);\r\n  }, []);\r\n\r\n  const notes = Array.from({ length: endNote - startNote + 1 }, (_, i) => startNote + i);\r\n  const whiteNotes = notes.filter(n => !isBlack(n));\r\n  const blackNotes = notes.filter(n => isBlack(n));\r\n\r\n  const spacing = 1.05;\r\n  const totalWidth = whiteNotes.length * spacing;\r\n  const viewWidth = 20;\r\n  const maxOffset = 0;\r\n  const minOffset = -totalWidth + viewWidth;\r\n\r\n  const dragging = useRef(false);\r\n  const lastPos = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const handleKey = (e) => {\r\n      if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {\r\n        setScrollOffset(offset => clamp(offset + 1, minOffset, maxOffset));\r\n      } else if (e.key === 'ArrowRight' || e.key === 'ArrowDown') {\r\n        setScrollOffset(offset => clamp(offset - 1, minOffset, maxOffset));\r\n      }\r\n    };\r\n    window.addEventListener('keydown', handleKey);\r\n    return () => window.removeEventListener('keydown', handleKey);\r\n  }, [minOffset, maxOffset]);\r\n\r\n  useEffect(() => {\r\n    const handleDown = (e) => {\r\n      dragging.current = true;\r\n      lastPos.current = isMobile ? e.clientY : e.clientX;\r\n    };\r\n    const handleMove = (e) => {\r\n      if (!dragging.current) return;\r\n      const current = isMobile ? e.clientY : e.clientX;\r\n      const delta = current - lastPos.current;\r\n      setScrollOffset(offset => clamp(offset + delta * 0.01, minOffset, maxOffset));\r\n      lastPos.current = current;\r\n    };\r\n    const handleUp = () => (dragging.current = false);\r\n\r\n    window.addEventListener('mousedown', handleDown);\r\n    window.addEventListener('mousemove', handleMove);\r\n    window.addEventListener('mouseup', handleUp);\r\n    return () => {\r\n      window.removeEventListener('mousedown', handleDown);\r\n      window.removeEventListener('mousemove', handleMove);\r\n      window.removeEventListener('mouseup', handleUp);\r\n    };\r\n  }, [isMobile, minOffset, maxOffset]);\r\n\r\n  useEffect(() => {\r\n    const handleWheel = (e) => {\r\n      setScrollOffset(offset => clamp(offset - e.deltaY * 0.02, minOffset, maxOffset));\r\n    };\r\n    window.addEventListener('wheel', handleWheel);\r\n    return () => window.removeEventListener('wheel', handleWheel);\r\n  }, [minOffset, maxOffset]);\r\n\r\n  const keyboardPosition = isMobile\r\n    ? [0, -8, -10]  // Z adjusted for rotated camera on mobile\r\n    : [-totalWidth / 2 + scrollOffset, -8, 0];\r\n\r\n  return (\r\n    <group position={keyboardPosition}>\r\n      {whiteNotes.map((note, i) => (\r\n        <Key\r\n          key={note}\r\n          note={note}\r\n          x={i * spacing}\r\n          isBlackKey={false}\r\n          isPressed={activeNotes.has(note)}\r\n          onNoteOn={onNoteOn}\r\n          onNoteOff={onNoteOff}\r\n        />\r\n      ))}\r\n      {blackNotes.map((note) => {\r\n        const index = whiteNotes.findIndex(n => n > note) - 1;\r\n        const x = index * spacing + 0.65;\r\n        return (\r\n          <Key\r\n            key={note}\r\n            note={note}\r\n            x={x}\r\n            isBlackKey={true}\r\n            isPressed={activeNotes.has(note)}\r\n            onNoteOn={onNoteOn}\r\n            onNoteOff={onNoteOff}\r\n          />\r\n        );\r\n      })}\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default Keyboard3D;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}