{"ast":null,"code":"import Voice from './Voice';\nexport default class SynthEngine {\n  constructor(audioContext = new (window.AudioContext || window.webkitAudioContext)()) {\n    this.audioContext = audioContext;\n    this.masterGain = this.audioContext.createGain();\n    this.masterGain.gain.value = 0.8;\n    this.masterGain.connect(this.audioContext.destination);\n    this.activeVoices = new Map();\n    this.parameters = {\n      waveform: 'sawtooth',\n      attack: 0.01,\n      decay: 0.2,\n      sustain: 0.7,\n      release: 0.5,\n      filterType: 'lowpass',\n      filterCutoff: 2000,\n      filterQ: 1\n    };\n  }\n  noteOn(note, velocity = 127) {\n    if (this.activeVoices.has(note)) return; // Avoid duplicate notes\n\n    const voice = new Voice(this.audioContext, this.masterGain, {\n      ...this.parameters,\n      velocity: velocity / 127\n    });\n    voice.start(note);\n    this.activeVoices.set(note, voice);\n  }\n  noteOff(note) {\n    const voice = this.activeVoices.get(note);\n    if (voice) {\n      voice.stop();\n      this.activeVoices.delete(note);\n    }\n  }\n  setParam(param, value) {\n    if (this.parameters.hasOwnProperty(param)) {\n      this.parameters[param] = value;\n    }\n  }\n  setWaveform(type) {\n    this.parameters.waveform = type;\n  }\n  setFilter(type, cutoff, q) {\n    this.parameters.filterType = type;\n    this.parameters.filterCutoff = cutoff;\n    this.parameters.filterQ = q;\n  }\n  setEnvelope(attack, decay, sustain, release) {\n    this.parameters.attack = attack;\n    this.parameters.decay = decay;\n    this.parameters.sustain = sustain;\n    this.parameters.release = release;\n  }\n}","map":{"version":3,"names":["Voice","SynthEngine","constructor","audioContext","window","AudioContext","webkitAudioContext","masterGain","createGain","gain","value","connect","destination","activeVoices","Map","parameters","waveform","attack","decay","sustain","release","filterType","filterCutoff","filterQ","noteOn","note","velocity","has","voice","start","set","noteOff","get","stop","delete","setParam","param","hasOwnProperty","setWaveform","type","setFilter","cutoff","q","setEnvelope"],"sources":["D:/git/aggregatrex-1/src/audio/SynthEngine.js"],"sourcesContent":["import Voice from './Voice';\r\n\r\nexport default class SynthEngine {\r\n  constructor(audioContext = new (window.AudioContext || window.webkitAudioContext)()) {\r\n    this.audioContext = audioContext;\r\n    this.masterGain = this.audioContext.createGain();\r\n    this.masterGain.gain.value = 0.8;\r\n    this.masterGain.connect(this.audioContext.destination);\r\n\r\n    this.activeVoices = new Map();\r\n    this.parameters = {\r\n      waveform: 'sawtooth',\r\n      attack: 0.01,\r\n      decay: 0.2,\r\n      sustain: 0.7,\r\n      release: 0.5,\r\n      filterType: 'lowpass',\r\n      filterCutoff: 2000,\r\n      filterQ: 1,\r\n    };\r\n  }\r\n\r\n  noteOn(note, velocity = 127) {\r\n    if (this.activeVoices.has(note)) return; // Avoid duplicate notes\r\n\r\n    const voice = new Voice(this.audioContext, this.masterGain, {\r\n      ...this.parameters,\r\n      velocity: velocity / 127\r\n    });\r\n    voice.start(note);\r\n    this.activeVoices.set(note, voice);\r\n  }\r\n\r\n  noteOff(note) {\r\n    const voice = this.activeVoices.get(note);\r\n    if (voice) {\r\n      voice.stop();\r\n      this.activeVoices.delete(note);\r\n    }\r\n  }\r\n\r\n  setParam(param, value) {\r\n    if (this.parameters.hasOwnProperty(param)) {\r\n      this.parameters[param] = value;\r\n    }\r\n  }\r\n\r\n  setWaveform(type) {\r\n    this.parameters.waveform = type;\r\n  }\r\n\r\n  setFilter(type, cutoff, q) {\r\n    this.parameters.filterType = type;\r\n    this.parameters.filterCutoff = cutoff;\r\n    this.parameters.filterQ = q;\r\n  }\r\n\r\n  setEnvelope(attack, decay, sustain, release) {\r\n    this.parameters.attack = attack;\r\n    this.parameters.decay = decay;\r\n    this.parameters.sustain = sustain;\r\n    this.parameters.release = release;\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,SAAS;AAE3B,eAAe,MAAMC,WAAW,CAAC;EAC/BC,WAAWA,CAACC,YAAY,GAAG,KAAKC,MAAM,CAACC,YAAY,IAAID,MAAM,CAACE,kBAAkB,EAAE,CAAC,EAAE;IACnF,IAAI,CAACH,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACI,UAAU,GAAG,IAAI,CAACJ,YAAY,CAACK,UAAU,CAAC,CAAC;IAChD,IAAI,CAACD,UAAU,CAACE,IAAI,CAACC,KAAK,GAAG,GAAG;IAChC,IAAI,CAACH,UAAU,CAACI,OAAO,CAAC,IAAI,CAACR,YAAY,CAACS,WAAW,CAAC;IAEtD,IAAI,CAACC,YAAY,GAAG,IAAIC,GAAG,CAAC,CAAC;IAC7B,IAAI,CAACC,UAAU,GAAG;MAChBC,QAAQ,EAAE,UAAU;MACpBC,MAAM,EAAE,IAAI;MACZC,KAAK,EAAE,GAAG;MACVC,OAAO,EAAE,GAAG;MACZC,OAAO,EAAE,GAAG;MACZC,UAAU,EAAE,SAAS;MACrBC,YAAY,EAAE,IAAI;MAClBC,OAAO,EAAE;IACX,CAAC;EACH;EAEAC,MAAMA,CAACC,IAAI,EAAEC,QAAQ,GAAG,GAAG,EAAE;IAC3B,IAAI,IAAI,CAACb,YAAY,CAACc,GAAG,CAACF,IAAI,CAAC,EAAE,OAAO,CAAC;;IAEzC,MAAMG,KAAK,GAAG,IAAI5B,KAAK,CAAC,IAAI,CAACG,YAAY,EAAE,IAAI,CAACI,UAAU,EAAE;MAC1D,GAAG,IAAI,CAACQ,UAAU;MAClBW,QAAQ,EAAEA,QAAQ,GAAG;IACvB,CAAC,CAAC;IACFE,KAAK,CAACC,KAAK,CAACJ,IAAI,CAAC;IACjB,IAAI,CAACZ,YAAY,CAACiB,GAAG,CAACL,IAAI,EAAEG,KAAK,CAAC;EACpC;EAEAG,OAAOA,CAACN,IAAI,EAAE;IACZ,MAAMG,KAAK,GAAG,IAAI,CAACf,YAAY,CAACmB,GAAG,CAACP,IAAI,CAAC;IACzC,IAAIG,KAAK,EAAE;MACTA,KAAK,CAACK,IAAI,CAAC,CAAC;MACZ,IAAI,CAACpB,YAAY,CAACqB,MAAM,CAACT,IAAI,CAAC;IAChC;EACF;EAEAU,QAAQA,CAACC,KAAK,EAAE1B,KAAK,EAAE;IACrB,IAAI,IAAI,CAACK,UAAU,CAACsB,cAAc,CAACD,KAAK,CAAC,EAAE;MACzC,IAAI,CAACrB,UAAU,CAACqB,KAAK,CAAC,GAAG1B,KAAK;IAChC;EACF;EAEA4B,WAAWA,CAACC,IAAI,EAAE;IAChB,IAAI,CAACxB,UAAU,CAACC,QAAQ,GAAGuB,IAAI;EACjC;EAEAC,SAASA,CAACD,IAAI,EAAEE,MAAM,EAAEC,CAAC,EAAE;IACzB,IAAI,CAAC3B,UAAU,CAACM,UAAU,GAAGkB,IAAI;IACjC,IAAI,CAACxB,UAAU,CAACO,YAAY,GAAGmB,MAAM;IACrC,IAAI,CAAC1B,UAAU,CAACQ,OAAO,GAAGmB,CAAC;EAC7B;EAEAC,WAAWA,CAAC1B,MAAM,EAAEC,KAAK,EAAEC,OAAO,EAAEC,OAAO,EAAE;IAC3C,IAAI,CAACL,UAAU,CAACE,MAAM,GAAGA,MAAM;IAC/B,IAAI,CAACF,UAAU,CAACG,KAAK,GAAGA,KAAK;IAC7B,IAAI,CAACH,UAAU,CAACI,OAAO,GAAGA,OAAO;IACjC,IAAI,CAACJ,UAAU,CAACK,OAAO,GAAGA,OAAO;EACnC;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}